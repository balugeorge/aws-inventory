#!/usr/bin/env python3
import sys
import argparse
import yaml
import botocore.session
import boto3
import csv
parser = argparse.ArgumentParser()
def inventory():
    access_key, secret_key, region = None, None, None
    #Load keys are region from the credentials.yml file
    with open('credentials.yml', 'r') as streams:
        for data in yaml.load_all(streams):
            access_key=data.get(args.profile, {}).get('AWS_ACCESS_KEY_ID')
            secret_key=data.get(args.profile, {}).get('AWS_SECRET_ACCESS_KEY')
            region=data.get(args.profile, {}).get('AWS_DEFAULT_REGION')
            if args.list:
                for profiles in data:
                    print(profiles)
            if access_key or secret_key or region is not None:
                break
    #Set session
    session = boto3.session.Session(
        aws_access_key_id=access_key,
        aws_secret_access_key=secret_key,
        region_name=region,
    )
    #List instances
    if args.profile:
        ec2 = session.resource('ec2')
        instances = ec2.instances.all()
        if args.out:
            print('{0:20}{1:20}{2:20}{3:20}{4:20}'.format("instance_id", "instance_type", "instance_state", "public_ip", "private_ip"))
            for instance in instances:
                print('{0!s:20}{1!s:20}{2!s:20}{3!s:20}{4!s:20}'.format(instance.id, instance.instance_type, instance.state['Name'], instance.public_ip_address, instance.private_ip_address))
        elif args.file:
            output_file = "inventory_"+args.profile+".csv"
            open(output_file, 'w').close()
            with open(output_file, 'a', newline='') as csvfile:
                writer = csv.writer(csvfile, delimiter=',')
                writer.writerow(["instance_id","instance_type","instance_state","public_ip","private_ip"])
                for instance in instances:
                    writer.writerow([instance.id, instance.instance_type, instance.state['Name'], instance.public_ip_address, instance.private_ip_address])
if __name__ == '__main__':
    parser.add_argument('-p', '--profile', help='enter profile name listed under the credentials.yml file')
    parser.add_argument('-l', '--list', help='print a list of all available profiles', action='store_true')
    parser.add_argument('-o', '--out', help='print inventory to stdout', action='store_true')
    parser.add_argument('-f', '--file', help='create a csv inventory file', action='store_true')
    args = parser.parse_args()
    if len(sys.argv) == 1:
        parser.print_help()
    else:
        try:
            inventory()
        except Exception as e:
            print(str(e))
